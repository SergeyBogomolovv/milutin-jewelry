// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Нужен код с почты админа, отправляет jwt токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Вход",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authcontroller.LoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authcontroller.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Неверный код",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/send-code": {
            "post": {
                "description": "Отправляет код на почту админа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Отправка кода",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/res.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/collection/{id}": {
            "get": {
                "description": "Получение украшений по ID коллекции, сортировка по дате создания",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Получение украшений по ID коллекции",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коллекции",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/itemscontroller.Item"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Коллекция не найдена",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/create": {
            "post": {
                "description": "Создание украшения в коллекции",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Создание украшения",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коллекции",
                        "name": "collection_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Название",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Описание",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Изображение",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/itemscontroller.Item"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Нет доступа",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Коллекции не существует",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/delete/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Удаление украшения",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID украшения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/itemscontroller.Item"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Нет доступа",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/update/{id}": {
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Обновление украшения",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID украшения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Новое название",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Новое описание",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Новое изображение",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Item successfully updated",
                        "schema": {
                            "$ref": "#/definitions/itemscontroller.Item"
                        }
                    },
                    "400": {
                        "description": "Invalid form data",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Нет доступа",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/res.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authcontroller.LoginBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "authcontroller.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "itemscontroller.Item": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "res.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "res.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Milutin Jewelry API",
	Description:      "Описание API для сервиса Milutin Jewelry",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
